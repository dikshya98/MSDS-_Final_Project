# -*- coding: utf-8 -*-
"""Final Project Week8.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-19wNG6EGKcSa7RsUDIaQX_GYk_NK6ae
"""

import pandas as pd
import matplotlib
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns

University = pd.read_csv('rankings.csv')
University

"""**EDA**"""

# Finding total columns and rows
University.shape

University.info()

# Replacing - to 0 in the dataset
University = University.replace("-","0")
University

# Coverting categorical datatype into integer for Analysis Purpose
University['Education Rank']=University['Education Rank'].astype(int)
University['Employability Rank']=University['Employability Rank'].astype(int)
University['Faculty Rank']=University['Faculty Rank'].astype(int)
University['Research Rank']=University['Research Rank'].astype(int)
University.info()

"""**Bar Graph 1**"""

USA_Uni=University[University["Location"]=="USA"]

fig=plt.figure(figsize=(18,10))
ax1 = fig.add_axes([0, 0, 1, 1])
ax1.plot(USA_Uni.Institution.head(67),USA_Uni.Score.head(67),marker=">",mfc="b",mec="yellow",c="k")
sns.barplot(x=USA_Uni.Institution.head(67),y=USA_Uni.Score.head(67))
ax1.set_title("Best Universities in USA for 2022-2023",fontsize=22,fontweight='bold')
plt.xticks(rotation=90, size=12)
ax1.set_xlabel("Institution",size=18,fontweight='bold')
ax1.set_ylabel("Score",size=18,fontweight='bold')

# Saving the Figure
fig.savefig('A.jpg', dpi=300, bbox_inches='tight')

"""**Bar Chart 2**"""

# Creating Bar chart to find top three universities in USA

fig= plt.figure(figsize=(10,5))
ax1 = fig.add_axes([0, 0, 1, 1])
ax1.set_title("Top 3 Universities in USA for 2022-2023",size=18,fontweight='bold')
sns.barplot( x=USA_Uni.Institution.head(3),y=USA_Uni.Score.head(15))
ax1.set_xlabel("Institutes",size=15,fontweight='bold')
ax1.set_ylabel("Score",size=15,fontweight='bold')


#Labeling the bars 
for bar in ax1.patches:
  ax1.annotate(format(bar.get_height()),
                   (bar.get_x()+bar.get_width() / 2,bar.get_height()),
                   size=10,ha='center',va='bottom',xytext=(0,8),
                   textcoords='offset points')
  
  # Saving the Figure
fig.savefig('Score1.jpg', dpi=300, bbox_inches='tight')

"""**Bar Graph 3**"""

# using grouby function to find the count
University_50=University[:50]
Top_50 = pd.DataFrame()
Top_50['Count'] = University_50.groupby('Location')['Location'].count().sort_values(ascending=False)
Top_50 = Top_50.reset_index()
Top_50

# Creating a bar chart for location and count
fig= plt.figure(figsize=(10,5))
ax1 = fig.add_axes([0, 0, 1, 1])
ax1.set_title('Top 50 universities Location',fontsize=14,fontweight='bold')
ax1 = sns.barplot(x='Location',y='Count',data=Top_50)
plt.xticks(rotation=45)
ax1.set_ylabel("Count",fontsize=15,fontweight='bold')
ax1.set_xlabel("Location",fontsize=15,fontweight='bold')

#Labeling the bars 
for bar in ax1.patches:
  ax1.annotate(format(bar.get_height()),
                   (bar.get_x()+bar.get_width() / 2,bar.get_height()),
                   size=10,ha='center',va='bottom',xytext=(0,8),
                   textcoords='offset points')
# Saving the Figure
fig.savefig('Bar_Graph.jpg', dpi=300, bbox_inches='tight')

"""**Choropleth Maps**"""

# Creating Choropleth for Top 50 Universities Location

import plotly.express as px
fig = px.choropleth(Top_50, locations='Location',locationmode="country names",scope="world",color="Count",color_continuous_scale="Viridis_r")
fig.update_layout(margin={"r":0,"t":0,"l":0,"b":0})

title_txt="Top 100 universities Location"

fig.show()

"""**Heatmap, Correlation Matrix**"""

# Finding the correlation values
University.corr()

# Masking to remove the mirror effect on heatmap figure
mask = np.zeros_like(University.corr())
triangle_indices = np.triu_indices_from(mask)
mask[triangle_indices]=True
mask

# Creating a Heat Map

fig = plt.figure(figsize=(10,5))
ax1 = fig.add_axes([0, 0, 1, 1])
ax1.set_title('Correlation Between Universities Ranking Factors',fontsize=14,fontweight='bold')

sns.heatmap(University.corr(), annot=True, cmap='coolwarm', linewidth=2, mask=mask)

#Saving the figure
fig.savefig('Heatmap.jpg', dpi=300, bbox_inches='tight')

"""**Boxplot**"""

z=University.Location[University.Score > 90]
z

# Creating a boxplot
fig= plt.figure(figsize=(10,5))
ax1 = fig.add_axes([0, 0, 1, 1])
ax1.set_title("Comparision of  USA vs UK universities with 90+ score",size=18,fontweight='bold')
ax1.set_ylabel("Location",fontsize=13,fontweight='bold')
ax1.set_xlabel("Score",fontsize=13,fontweight='bold')
sns.boxplot(x=University["Score"], y=z)

#Saving the figure
fig.savefig('Boxplot.jpg', dpi=300, bbox_inches='tight')